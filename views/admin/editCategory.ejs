<%- include ("../layout/admintemHeader") %>
<%- include ("../layout/sideBar") %>

<main class="main-wrap">
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Category</h2>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <form id="edit-category-form" action="/admin/editcategory/<%= category._id %>" method="POST" enctype="multipart/form-data">
                            <!-- Category Name -->
                            <div class="mb-4">
                                <label for="category_name" class="form-label">Category name</label>
                                <input type="text" name="name" placeholder="Type here" value="<%= category.name %>" class="form-control" id="category_name">
                                <div class="error-message" style="color: red;" id="category_name-error"></div>
                            </div>

                            <!-- Description -->
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <textarea name="description" placeholder="Type here" class="form-control" rows="4" id="description"><%= category.description %></textarea>
                                <div class="error-message" style="color: red;" id="description-error"></div>
                            </div>

                            <!-- Image Section -->
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h4>Category Image</h4>
                                </div>
                                <div class="card-body">
                                    <div class="image-wrapper mb-3" id="image-wrapper">
                                        <div class="current-image position-relative">
                                            <img src="/assets/imgs/categoryIMG/<%= category.image %>" 
                                                 alt="Category Image" 
                                                 class="img-fluid rounded"
                                                 style="max-width: 200px;">
                                            <button type="button" 
                                                    class="btn btn-danger btn-sm position-absolute top-0 end-0 m-2"
                                                    id="delete-image-btn">
                                                Ã—
                                            </button>
                                        </div>
                                        <div class="new-image-input mt-3" style="display: none;">
                                            <input type="file" 
                                                   name="newImage" 
                                                   class="form-control"
                                                   accept="image/png,image/jpeg,image/jpg">
                                            <div class="preview mt-2" style="display: none;">
                                                <img class="img-fluid rounded" style="max-width: 200px;">
                                            </div>
                                        </div>
                                    </div>
                                    <input type="hidden" name="deleteCurrentImage" id="deleteCurrentImage" value="false">
                                    <div class="error-message" style="color: red;" id="image-error"></div>
                                </div>
                            </div>

                            <!-- Submit Button -->
                            <div class="d-flex justify-content-center mt-3">
                                <button type="submit" class="btn btn-primary">Update Category</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<style>
    .image-wrapper {
        position: relative;
        margin-bottom: 1.5rem;
        border: 1px solid #ddd;
        padding: 10px;
        border-radius: 4px;
    }
    .current-image {
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
    }
    .error-message {
        color: red;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
    .preview {
        display: flex;
        justify-content: center;
        align-items: center;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('edit-category-form');
    const deleteImageBtn = document.getElementById('delete-image-btn');
    const deleteCurrentImageInput = document.getElementById('deleteCurrentImage');
    
    // Handle image deletion and replacement
    deleteImageBtn.addEventListener('click', function() {
        Swal.fire({
            title: 'Delete Image?',
            text: "You'll need to upload a new image to replace this one",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Hide current image and show file input
                document.querySelector('.current-image').style.display = 'none';
                document.querySelector('.new-image-input').style.display = 'block';
                deleteCurrentImageInput.value = 'true';

                Swal.fire(
                    'Deleted!',
                    'Please upload a new image as replacement',
                    'success'
                );
            }
        });
    });

    // Handle new image preview and validation
    const fileInput = document.querySelector('input[type="file"]');
    fileInput.addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (!file) return;

        if (!validateImage(file)) {
            this.value = '';
            return;
        }

        const preview = this.nextElementSibling.querySelector('img');
        const previewContainer = this.nextElementSibling;

        const reader = new FileReader();
        reader.onload = function(e) {
            preview.src = e.target.result;
            previewContainer.style.display = 'block';
        };
        reader.readAsDataURL(file);
    });

    // Image validation function
    function validateImage(file) {
        const validTypes = ['image/jpeg', 'image/png', 'image/jpg'];
        const maxSize = 10 * 1024 * 1024; // 10MB

        if (!validTypes.includes(file.type)) {
            showError('image', 'Please select a valid image file (JPG, PNG)');
            return false;
        }

        if (file.size > maxSize) {
            showError('image', 'Image size should be less than 10MB');
            return false;
        }

        return true;
    }

    // Form validation
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        clearErrors();

        if (validateForm()) {
            this.submit();
        }
    });

    function validateForm() {
        let isValid = true;
        const namePattern = /^[a-zA-Z0-9\s'-]+$/;
        const descriptionPattern = /^[a-zA-Z0-9\s,.'-]+$/;

        // Category Name validation
        const categoryName = document.getElementById('category_name');
        if (!namePattern.test(categoryName.value.trim())) {
            isValid = false;
            showError('category_name', 'Category Name can only contain letters, numbers, spaces, hyphens, and apostrophes');
        }

        // Description validation
        const description = document.getElementById('description');
        if (!descriptionPattern.test(description.value.trim())) {
            isValid = false;
            showError('description', 'Description can only contain letters, numbers, commas, periods, and hyphens');
        }

        // Image validation when current image is deleted
        if (deleteCurrentImageInput.value === 'true' && !fileInput.files[0]) {
            isValid = false;
            showError('image', 'Please upload a new image');
        }

        return isValid;
    }

    function showError(fieldId, message) {
        const errorElement = document.getElementById(`${fieldId}-error`);
        if (errorElement) {
            errorElement.textContent = message;
        }
    }

    function clearErrors() {
        document.querySelectorAll('.error-message').forEach(el => {
            el.textContent = '';
        });
    }
});
</script>